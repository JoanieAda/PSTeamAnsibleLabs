---
- name: GENERATE A REPORT
  hosts: R1

  tasks:
    - name: Loading validation variables
      stat:
        path: "validation_vars/{{ inventory_hostname }}.yaml"
      register: validation_yaml
    - include_vars:
        file: "validation_vars/{{ inventory_hostname }}.yaml"
      when: validation_yaml.stat.exists == True
  
    - name: PARSE THE RAW OUTPUT
      ansible.utils.cli_parse:
        command: show ip interface brief
        parser:
          name: ansible.netcommon.ntc_templates
          #  template_path: show_ip_interface_brief.yaml
        set_fact: "int_list"
      register: test

    - name: "PARSE DATA AND SET_FACT WITH PARSE_CLI FILTER PLUGIN"
      ansible.builtin.set_fact:
        parse_cli_ip_int_br: "{{ test['stdout'] | ansible.netcommon.parse_cli('ip_interface_filter.yaml') }}"

    - name: Assert configuration
      ansible.builtin.assert:
        that: 
          - "int_list | selectattr('intf', 'equalto', item.val_intf) | selectattr('ipaddr', 'equalto', item.val_ip)"
        #- "parse_cli_ip_int_br['val_ip_address'] | map(attribute='val_intf') | first == item.val_intf"  
        #  - "parse_cli_ip_int_br['val_ip_address'] | selectattr('val_intf', 'equalto', item.val_intf)"
      loop: "{{ interface_list }}"


...
